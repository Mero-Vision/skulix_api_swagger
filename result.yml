openapi: 3.0.0
info:
  title: Skulix API Swagger
  description: Skulix API documentation
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Mero Vision
    url: https://merovision.com
    email: merovision720@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: https://api.skulix.com/
    description: server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: Super Admin
  - name: Super Admin > Auth
  - name: Super Admin > School
  - name: Super Admin > Set or update school sms credentials
  - name: Admin
  - name: Admin > Auth
  - name: Admin > Academic Sessions
  - name: Admin > School
  - name: Admin > Student Batches
  - name: Admin > Student Faculty
  - name: Admin > Admin
  - name: Admin > Student Level
  - name: Admin > Student Program
  - name: Admin > Student Classes
  - name: Admin > Class Sections
  - name: Admin > Student Types
  - name: Admin > Exam Types
  - name: Admin > Student
  - name: Admin > Visitor Logs
  - name: Admin > Subjects
  - name: Admin > Employee Types
  - name: Admin > Techer/Staff
  - name: Admin > Class Rooms
  - name: Admin > Class Routine
  - name: Admin > Outing Purpose
  - name: Admin > Outing
  - name: Admin > Scholarship
  - name: Admin > Account Heads
  - name: Admin > Bus Stops
  - name: Admin > School Account Head
  - name: Admin > Class Fee Particulars
  - name: Admin > Student Login Logs
  - name: Admin > Notifications
  - name: Admin > Student Attendance
  - name: Admin > Student Attendance > Attendance Report
  - name: Admin > Event
  - name: Admin > Gallery
  - name: Admin > School Message
  - name: Admin > Food Menu
  - name: Admin > Student Particular
  - name: Admin > Class Subject
  - name: Admin > Payment Options
  - name: Admin > Student Invoice
  - name: Admin > Student Payment
  - name: Admin > Home Work
  - name: Admin > Guardian Feedbacks
  - name: Admin > Payroll
  - name: Admin > Payroll > Employee
  - name: Admin > Payroll > Employee Allowance Type
  - name: Admin > Payroll > Employee Deduction Type
  - name: Admin > Payroll > Employee Advance Payment
  - name: Admin > Payroll > Employee Payroll
  - name: Admin > Payroll > Employee Payment
  - name: Admin > Inventory
  - name: Admin > Inventory > Category
  - name: Admin > Inventory > Inventory Product Unit
  - name: Admin > Inventory > Inventory Product Suppliers
  - name: Admin > Inventory > Inventory Products
  - name: Admin > Inventory > Inventory Product Purchase Bill
  - name: Admin > Inventory > Inventory Supplier Payment
  - name: Admin > Inventory > Inventory Adjustment
  - name: Admin > Inventory > Inventory Dashboard
  - name: Admin > Dashboard
  - name: Admin > Roles and Permissions
  - name: Admin > Teacher Subject
  - name: Admin > Reports
  - name: Admin > Reports > Student Reports
  - name: Admin > Reports > Finance & Fees Reports
  - name: Student
  - name: Student > Auth
  - name: Student > Student
  - name: Student > Student Class Routine
  - name: Student > Notifications
  - name: Student > Student Attendance
  - name: Student > Gallery
  - name: Student > Event
  - name: Student > Food Menu
  - name: Student > Class Mate
  - name: Student > Class Subjects
  - name: Student > Home Work
  - name: Student > Guardian Feedback
  - name: Student > Student Payment
  - name: Student > Student Leave Request
  - name: Teacher
  - name: Teacher > Auth
  - name: Teacher > Teacher
  - name: Teacher > Teacher Subject
  - name: Teacher > Student Attendance
paths:
  /api/superadmin/login:
    post:
      tags:
        - Super Admin > Auth
      summary: superadmin login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: superadmin@gmail.com
                password:
                  type: string
                  example: Password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/schools:
    post:
      tags:
        - Super Admin > School
      summary: store school data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Siddhartha Shishu Sadan
                display_name:
                  type: string
                  example: Siddhartha
                email:
                  type: string
                  example: siddhratha@gmail.com
                phone:
                  type: integer
                  example: '12342435'
                address:
                  type: string
                  example: Bhadrapur
                vat_number:
                  type: integer
                  example: '2324325'
                registration_number:
                  type: string
                  example: rwrertret
                established_date:
                  type: string
                  example: 2002-01-2
                website:
                  type: string
                  example: siddhartha.com
                school_type:
                  type: string
                  example: public
                school_logo:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super Admin > School
      summary: show all school list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/school-invite-admin:
    post:
      tags:
        - Super Admin > School
      summary: invite admin to school
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                email:
                  type: string
                  example: hanciephago@gmail.com
                school_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/verify-account:
    post:
      tags:
        - Super Admin > School
      summary: verify account and set password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: zykHygvEXR1VL31CviAEs6xLSMJNZBTmerygUGzmXj7OiMm7abfHA1DNLRu5
                password:
                  type: string
                  example: Password
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/schools/{id}:
    post:
      tags:
        - Super Admin > School
      summary: update school
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Siddhartha Shishu Sadan School
                display_name:
                  type: string
                  example: Siddhartha
                email:
                  type: string
                  example: siddhratha@gmail.com
                phone:
                  type: integer
                  example: '12342435'
                address:
                  type: string
                  example: Bhadrapur
                vat_number:
                  type: integer
                  example: '2324325'
                registration_number:
                  type: string
                  example: rwrertret
                established_date:
                  type: string
                  example: 2002-01-2
                website:
                  type: string
                  example: siddhartha.com
                school_type:
                  type: string
                  example: public
                school_logo:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super Admin > School
      summary: show single school data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/school-sms/{school_id}:
    post:
      tags:
        - Super Admin > Set or update school sms credentials
      summary: store school sms
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                sms_provider:
                  type: string
                  example: Akash SMS
                sms_token:
                  type: string
                  example: a26d5b1352086abf21bdd7
                sms_sender_id:
                  type: string
                  example: Skulix
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/login:
    post:
      tags:
        - Admin > Auth
      summary: admin login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hanciephago@gmail.com
                password:
                  type: string
                  example: Password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/forgot-password:
    post:
      tags:
        - Admin > Auth
      summary: forgot password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hanciephago@gmail.com
                school_id:
                  type: integer
                  example: '1'
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reset-password:
    post:
      tags:
        - Admin > Auth
      summary: reset password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: integer
                  example: '123'
                password_confirmation:
                  type: integer
                  example: '123'
                token:
                  type: string
                  example: SDGDG
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/academic-sessions:
    get:
      tags:
        - Admin > Academic Sessions
      summary: show all academic sessions
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '3'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Academic Sessions
      summary: store academic session
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: integer
                  example: '2082'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/academic-sessions/status/3:
    post:
      tags:
        - Admin > Academic Sessions
      summary: update academic session status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: boolean
                  example: 'true'
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/academic-sessions/{id}:
    post:
      tags:
        - Admin > Academic Sessions
      summary: update academic sessions
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: integer
                  example: '2081'
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '3'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Academic Sessions
      summary: delete academic sessions
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/schools/{id}:
    post:
      tags:
        - Admin > School
      summary: update school details
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Siddhartha Shishu Sadan
                display_name:
                  type: string
                  example: Siddhartha
                email:
                  type: string
                  example: siddhratha@gmail.com
                phone:
                  type: integer
                  example: '12342435'
                address:
                  type: string
                  example: Bhadrapur
                vat_number:
                  type: integer
                  example: '2324325'
                registration_number:
                  type: string
                  example: rwrertret
                established_date:
                  type: string
                  example: 2002-01-2
                website:
                  type: string
                  example: siddhartha.com
                school_type:
                  type: string
                  example: public
                school_logo:
                  type: string
                  format: binary
                school_banner_1:
                  type: string
                  format: binary
                school_banner_2:
                  type: string
                  format: binary
                school_banner_3:
                  type: string
                  format: binary
                nepali_name:
                  type: string
                about_us:
                  type: string
                school_quote:
                  type: string
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > School
      summary: show single school data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/update-school-banner/{id}:
    post:
      tags:
        - Admin > School
      summary: update school banner
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                school_banner_1:
                  type: string
                  format: binary
                school_banner_2:
                  type: string
                  format: binary
                school_banner_3:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/schools:
    get:
      tags:
        - Admin > School
      summary: show all schools
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/student-batches:
    get:
      tags:
        - Admin > Student Batches
      summary: show all student batchs
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Student Batches
      summary: store student batches
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                batch_year:
                  type: integer
                  example: '2082'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/student-batches/{id}:
    post:
      tags:
        - Admin > Student Batches
      summary: update scholl batches
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                batch_year:
                  type: integer
                  example: '2020'
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/faculty:
    post:
      tags:
        - Admin > Student Faculty
      summary: store student faculty
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: School
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Student Faculty
      summary: show all faculty
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/user/{id}:
    get:
      tags:
        - Admin > Admin
      summary: show admin detail
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.12
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Mon, 05 May 2025 07:28:21 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  name: Admin
                  email: superadmin@gmail.com
                  email_verified_at: '2025-05-04T17:15:08.000000Z'
                  roles:
                    - id: 1
                      name: superadmin
                      permissions: []
                  last_login_at: 2025-05-04 11:03 PM
                  created_at: 2025-05-04 11:00 pm
                  updated_at: 2025-05-04 11:03 pm
  /api/admin/change-password:
    post:
      tags:
        - Admin > Admin
      summary: change admin password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                current_password:
                  type: integer
                  example: '12345'
                password:
                  type: string
                  example: Password@720
                confirm_password:
                  type: string
                  example: Password@720
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/levels:
    post:
      tags:
        - Admin > Student Level
      summary: store student levels
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Lower Secondary
                faculty_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Student Level
      summary: show all levels
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/programs:
    post:
      tags:
        - Admin > Student Program
      summary: store program
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                faculty_id:
                  type: integer
                  example: '1'
                level_id:
                  type: integer
                  example: '1'
                name:
                  type: string
                  example: School
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Student Program
      summary: list programs
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/classes:
    post:
      tags:
        - Admin > Student Classes
      summary: store class data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                faculty_id:
                  type: integer
                  example: '1'
                level_id:
                  type: integer
                  example: '1'
                program_id:
                  type: integer
                  example: '1'
                name:
                  type: string
                  example: Four
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Student Classes
      summary: show all classes list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/classes/{class_id}/sections:
    get:
      tags:
        - Admin > Student Classes
      summary: search sections from class
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: class_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/classes-with-students:
    get:
      tags:
        - Admin > Student Classes
      summary: show all classes with student counts
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/bulk-student-class-promotion:
    post:
      tags:
        - Admin > Student Classes
      summary: bulk student class promotions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                students:
                  - id: 3
                    to_class_id: 2
                    to_section_id: 1
                  - id: 4
                    is_left: 'true'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/sections:
    post:
      tags:
        - Admin > Class Sections
      summary: store section data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                faculty_id:
                  type: integer
                  example: '1'
                level_id:
                  type: integer
                  example: '1'
                program_id:
                  type: integer
                  example: '1'
                class_id:
                  type: integer
                  example: '1'
                name:
                  type: string
                  example: A
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Class Sections
      summary: show all sections
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/student-types:
    post:
      tags:
        - Admin > Student Types
      summary: store student types
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Day Scholar
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Student Types
      summary: show all student types
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/student-types/{id}:
    post:
      tags:
        - Admin > Student Types
      summary: update student type
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Day Scholar
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/exam-types:
    post:
      tags:
        - Admin > Exam Types
      summary: store exam types
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Third Term Examination
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Exam Types
      summary: show all exam types
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/exam-types/{id}:
    post:
      tags:
        - Admin > Exam Types
      summary: update exam types
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Third Term Examination
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Exam Types
      summary: delete exam type
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/students:
    post:
      tags:
        - Admin > Student
      summary: store student data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: ' Hancie'
                middle_name:
                  type: string
                  example: ' '
                last_name:
                  type: string
                  example: ' Phago'
                email:
                  type: string
                  example: ' hanciephago1@example.com'
                dob:
                  type: string
                  example: ' 2005-03-20'
                gender:
                  type: string
                  example: ' female'
                address:
                  type: string
                  example: ' Kathmandu, Nepal'
                blood_group:
                  type: string
                  example: ' O+'
                food_preference:
                  type: string
                  example: ' Vegetarian'
                batch_id:
                  type: string
                  example: ' 1'
                class_id:
                  type: string
                  example: ' 1'
                section_id:
                  type: string
                  example: ' 1'
                student_type:
                  type: string
                  example: ' 1'
                roll_no:
                  type: string
                  example: ' 22A'
                addmission_date:
                  type: string
                  example: ' 2023-04-10'
                emis_no:
                  type: string
                  example: ' 1234567890'
                permanent_province:
                  type: string
                  example: ' Bagmati'
                permanent_district:
                  type: string
                  example: ' Lalitpur'
                permanent_municipality:
                  type: string
                  example: ' Godawari'
                permanent_ward_no:
                  type: string
                  example: ' 3'
                permanent_tole:
                  type: string
                  example: ' Chapagaun'
                temporary_province:
                  type: string
                  example: ' Bagmati'
                temporary_district:
                  type: string
                  example: ' Kathmandu'
                temporary_municipality:
                  type: string
                  example: ' KMC'
                temporary_ward_no:
                  type: string
                  example: ' 11'
                temporary_tole:
                  type: string
                  example: ' Baneshwor'
                father_name:
                  type: string
                  example: ' Ram Thapa'
                father_phone:
                  type: string
                  example: ' 9800000001'
                father_email:
                  type: string
                  example: ' ram.thapa@example.com'
                father_education:
                  type: string
                  example: ' Bachelor'
                father_occupation:
                  type: string
                  example: ' Engineer'
                mother_name:
                  type: string
                  example: ' Maya Thapa'
                mother_phone:
                  type: string
                  example: ' 9800000002'
                mother_email:
                  type: string
                  example: ' maya.thapa@example.com'
                mother_education:
                  type: string
                  example: ' Master'
                mother_occupation:
                  type: string
                  example: ' Teacher'
                guardian_name:
                  type: string
                  example: ' Dinesh Thapa'
                guardian_phone:
                  type: string
                  example: ' 9800000003'
                guardian_email:
                  type: string
                  example: ' dinesh.thapa@example.com'
                guardian_education:
                  type: string
                  example: ' Bachelor'
                guardian_occupation:
                  type: string
                  example: ' Business'
                guardian_relation:
                  type: string
                  example: ' Uncle'
                is_disabled:
                  type: string
                  example: ' 1'
                student_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Student
      summary: show all student list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/students/{id}:
    post:
      tags:
        - Admin > Student
      summary: update student data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: ' Sita'
                middle_name:
                  type: string
                  example: ' Kumari'
                last_name:
                  type: string
                  example: ' Thapa'
                email:
                  type: string
                  example: ' sita.thapa@example.com'
                dob:
                  type: string
                  example: ' 2005-03-25'
                gender:
                  type: string
                  example: ' female'
                address:
                  type: string
                  example: ' Kathmandu, Nepal'
                blood_group:
                  type: string
                  example: ' O+'
                food_preference:
                  type: string
                  example: ' Vegetarian'
                batch_id:
                  type: string
                  example: ' 1'
                class_id:
                  type: string
                  example: ' 1'
                section_id:
                  type: string
                  example: ' 1'
                student_type:
                  type: string
                  example: ' 1'
                roll_no:
                  type: string
                  example: ' 22A'
                addmission_date:
                  type: string
                  example: ' 2023-04-10'
                emis_no:
                  type: string
                  example: ' 1234567890'
                permanent_province:
                  type: string
                  example: ' Bagmati'
                permanent_district:
                  type: string
                  example: ' Lalitpur'
                permanent_municipality:
                  type: string
                  example: ' Godawari'
                permanent_ward_no:
                  type: string
                  example: ' 3'
                permanent_tole:
                  type: string
                  example: ' Chapagaun'
                temporary_province:
                  type: string
                  example: ' Bagmati'
                temporary_district:
                  type: string
                  example: ' Kathmandu'
                temporary_municipality:
                  type: string
                  example: ' KMC'
                temporary_ward_no:
                  type: string
                  example: ' 11'
                temporary_tole:
                  type: string
                  example: ' Baneshwor'
                father_name:
                  type: string
                  example: ' Ram Thapa'
                father_phone:
                  type: string
                  example: ' 9800000001'
                father_email:
                  type: string
                  example: ' ram.thapa@example.com'
                father_education:
                  type: string
                  example: ' Bachelor'
                father_occupation:
                  type: string
                  example: ' Engineer'
                mother_name:
                  type: string
                  example: ' Maya Thapa'
                mother_phone:
                  type: string
                  example: ' 9800000002'
                mother_email:
                  type: string
                  example: ' maya.thapa@example.com'
                mother_education:
                  type: string
                  example: ' Master'
                mother_occupation:
                  type: string
                  example: ' Teacher'
                guardian_name:
                  type: string
                  example: ' Dinesh Thapa'
                guardian_phone:
                  type: string
                  example: ' 9800000003'
                guardian_email:
                  type: string
                  example: ' dinesh.thapa@example.com'
                guardian_education:
                  type: string
                  example: ' Bachelor'
                guardian_occupation:
                  type: string
                  example: ' Business'
                guardian_relation:
                  type: string
                  example: ' Uncle'
                is_disabled:
                  type: string
                  example: ' 1'
                student_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Student
      summary: delete student data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Student
      summary: show single student data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/student-leave:
    post:
      tags:
        - Admin > Student
      summary: student leave
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                students:
                  - id: 23
                    reason: suspended
                  - id: 22
                    reason: left
                  - id: 25
                    reason: transferred
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/visitor-logs:
    post:
      tags:
        - Admin > Visitor Logs
      summary: store visitor logs
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                phone:
                  type: integer
                  example: '23543546'
                email:
                  type: string
                  example: johndoe@example.com
                address:
                  type: string
                  example: Kathmandu
                purpose:
                  type: string
                  example: Admission Inquiry
                person_to_meet:
                  type: string
                  example: Admin Officer
                check_in_date:
                  type: string
                  example: '2025-06-01'
                check_in_time:
                  type: string
                  example: 07:20 PM
                remarks:
                  type: string
                  example: Wants to discuss admission
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Visitor Logs
      summary: show all visitor logs
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '7'
        - name: search_keyword
          in: query
          schema:
            type: string
          example: John Doe
        - name: start_date
          in: query
          schema:
            type: string
          example: '2024-01-20'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2024-02-01'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/visitor-logs/{id}:
    delete:
      tags:
        - Admin > Visitor Logs
      summary: delete visitor logs
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/subjects:
    post:
      tags:
        - Admin > Subjects
      summary: store subjects
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                subject_code:
                  type: string
                  example: NPL 002
                subject_name:
                  type: string
                  example: Compulsory Nepali
                theory_full_marks:
                  type: integer
                  example: '50'
                theory_pass_marks:
                  type: integer
                  example: '20'
                practical_full_marks:
                  type: integer
                  example: '50'
                practical_pass_marks:
                  type: integer
                  example: '20'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Subjects
      summary: show all subject list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/subjects/{id}:
    post:
      tags:
        - Admin > Subjects
      summary: update subject data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                subject_code:
                  type: string
                  example: NPL 002
                subject_name:
                  type: string
                  example: Compulsory Nepali
                theory_full_marks:
                  type: integer
                  example: '50'
                theory_pass_marks:
                  type: integer
                  example: '20'
                practical_full_marks:
                  type: integer
                  example: '50'
                practical_pass_marks:
                  type: integer
                  example: '20'
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/employee-types:
    post:
      tags:
        - Admin > Employee Types
      summary: store employee type
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Teacher
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Employee Types
      summary: show all employee type list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/employee-types/{id}:
    post:
      tags:
        - Admin > Employee Types
      summary: update employee type
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Teacher
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Employee Types
      summary: delete employee type
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/staffs:
    post:
      tags:
        - Admin > Techer/Staff
      summary: store staff data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Arun Shrestha
                staff_image:
                  type: string
                  format: binary
                email:
                  type: string
                  example: arun33599@gmail.com
                dob:
                  type: string
                  example: '2023-03-20'
                gender:
                  type: string
                  example: Male
                address:
                  type: string
                  example: KTM
                faculty_id:
                  type: integer
                  example: '1'
                level_id:
                  type: integer
                  example: '1'
                program_id:
                  type: integer
                  example: '1'
                class_id:
                  type: integer
                  example: '1'
                section_id:
                  type: integer
                  example: '1'
                employee_type_id:
                  type: integer
                  example: '1'
                employee_pan_no:
                  type: integer
                  example: '345436'
                citizenship_number:
                  type: integer
                  example: '234543543'
                blood_group:
                  type: string
                  example: A+
                qualification:
                  type: string
                  example: Master Degree
                designation:
                  type: string
                  example: Principal
                joining_date:
                  type: string
                  example: '2025-01-20'
                is_principal:
                  type: boolean
                  example: 'true'
                mobile_no:
                  type: integer
                  example: '454366'
                management_type:
                  type: string
                  example: Teacher, Management, Staff
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Techer/Staff
      summary: show all staffs
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/staffs/{id}:
    post:
      tags:
        - Admin > Techer/Staff
      summary: update staff data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Arun Shrestha
                staff_image:
                  type: string
                  format: binary
                email:
                  type: string
                  example: arun33599@gmail.com
                dob:
                  type: string
                  example: '2023-03-20'
                gender:
                  type: string
                  example: Male
                address:
                  type: string
                  example: KTM
                faculty_id:
                  type: integer
                  example: '1'
                level_id:
                  type: integer
                  example: '1'
                program_id:
                  type: integer
                  example: '1'
                class_id:
                  type: integer
                  example: '1'
                section_id:
                  type: integer
                  example: '1'
                employee_type_id:
                  type: integer
                  example: '1'
                employee_pan_no:
                  type: integer
                  example: '345436'
                citizenship_number:
                  type: integer
                  example: '234543543'
                blood_group:
                  type: string
                  example: A+
                qualification:
                  type: string
                  example: Master Degree
                designation:
                  type: string
                  example: Principal
                joining_date:
                  type: string
                  example: '2025-01-20'
                is_principal:
                  type: boolean
                  example: 'true'
                mobile_no:
                  type: integer
                  example: '454366'
                management_type:
                  type: string
                  example: Teacher, Management, Staff
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Techer/Staff
      summary: show single staff data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/class-rooms:
    post:
      tags:
        - Admin > Class Rooms
      summary: store class room
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: integer
                  example: '106'
                room_capacity:
                  type: integer
                  example: '30'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Class Rooms
      summary: show all class rooms list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/class-rooms/{id}:
    post:
      tags:
        - Admin > Class Rooms
      summary: update  class room
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: integer
                  example: '106'
                room_capacity:
                  type: integer
                  example: '30'
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Class Rooms
      summary: delete class room
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/class-routines:
    post:
      tags:
        - Admin > Class Routine
      summary: store class routine
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                routines:
                  - class_id: 1
                    section_id: 1
                    subject_id: 1
                    teacher_id: 1
                    day: Tuesday
                    from_time: '08:00'
                    to_time: '08:40'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Class Routine
      summary: show class routines
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: class_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: section_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/class-routines/{id}:
    delete:
      tags:
        - Admin > Class Routine
      summary: delete class routine
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/outing-purpose:
    post:
      tags:
        - Admin > Outing Purpose
      summary: store outing porse
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Excursion
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Outing Purpose
      summary: show all outing purposes
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/outing-purpose/{id}:
    post:
      tags:
        - Admin > Outing Purpose
      summary: update outing purpose
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Excursion
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Outing Purpose
      summary: delete outing purpose
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/outings:
    post:
      tags:
        - Admin > Outing
      summary: store outing data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                student_id:
                  type: integer
                  example: '4'
                outing_purpose_id:
                  type: integer
                  example: '1'
                outing_date:
                  type: string
                  example: '2024-02-20'
                approved_by:
                  type: string
                  example: Alex
                received_by:
                  type: string
                  example: Father
                contact_no:
                  type: integer
                  example: '345465'
                remarks:
                  type: string
                  example: Emergency
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Outing
      summary: show all outing list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: start_date
          in: query
          schema:
            type: string
        - name: end_date
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/get-student-outings/{student_id}:
    get:
      tags:
        - Admin > Outing
      summary: get student outing
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: student_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/scholarships:
    post:
      tags:
        - Admin > Scholarship
      summary: store scholarship
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: 50% Scholarships
                description:
                  type: string
                  example: >-
                    This Scholarship are Provided to Children of Teachers. This
                    Scholarship provided Students are Discounted 30% of Monthly
                    fee, Exam fee and Bus Fee.
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Scholarship
      summary: show all scholarship list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/scholarships/{id}:
    post:
      tags:
        - Admin > Scholarship
      summary: update scholarship
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: 30% Scholarships
                description:
                  type: string
                  example: >-
                    This Scholarship are Provided to Children of Teachers. This
                    Scholarship provided Students are Discounted 30% of Monthly
                    fee, Exam fee and Bus Fee.
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Scholarship
      summary: delete scholarship
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/account-heads:
    get:
      tags:
        - Admin > Account Heads
      summary: show all account heads
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/account-sub-heads:
    post:
      tags:
        - Admin > Account Heads
      summary: store account sub heads
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Academy Incomes
                account_head_id:
                  type: integer
                  example: '7'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/account-sub-sub-heads:
    post:
      tags:
        - Admin > Account Heads
      summary: store account sub sub head
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Previous Dues
                account_head_id:
                  type: integer
                  example: '1'
                account_sub_head_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/bus-stops:
    post:
      tags:
        - Admin > Bus Stops
      summary: store bus stops
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Lagankhel
                landmark:
                  type: string
                  example: Near Bus Park
                vehicle_no:
                  type: string
                  example: AR496
                monthly_fee:
                  type: integer
                  example: '550'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Bus Stops
      summary: show all bus stops
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '6'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/bus-stops/{id}:
    post:
      tags:
        - Admin > Bus Stops
      summary: update bus stop
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Lagankhel
                landmark:
                  type: string
                  example: Near Bus Park
                vehicle_no:
                  type: string
                  example: AR496
                monthly_fee:
                  type: integer
                  example: '550'
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '6'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Bus Stops
      summary: delete bus stop
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '6'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/school-account-heads:
    post:
      tags:
        - Admin > School Account Head
      summary: store account head
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                account_head_id:
                  type: integer
                  example: '1'
                account_sub_head_id:
                  type: integer
                  example: '1'
                account_sub_sub_head_id:
                  type: integer
                  example: '1'
                name:
                  type: string
                  example: Transportation Fees
                nepali_heading:
                  type: string
                  example: Transportation Fees
                period_name:
                  type: string
                  example: OneTime
                head_type:
                  type: string
                  example: Regular
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > School Account Head
      summary: show all school account heads
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/school-account-heads/{id}:
    post:
      tags:
        - Admin > School Account Head
      summary: update school account head
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                account_head_id:
                  type: integer
                  example: '1'
                account_sub_head_id:
                  type: integer
                  example: '1'
                name:
                  type: string
                  example: Admission Fee
                nepali_heading:
                  type: string
                  example: Admission Fee
                period_name:
                  type: string
                  example: OneTime
                head_type:
                  type: string
                  example: Regular, Bus, Misc
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > School Account Head
      summary: delete school account head
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/class-fee-particulars:
    post:
      tags:
        - Admin > Class Fee Particulars
      summary: store class fee particulars
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                school_account_head_id:
                  type: integer
                  example: '2'
                class_id:
                  type: integer
                  example: '1'
                amount:
                  type: integer
                  example: '1500'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Class Fee Particulars
      summary: show all class fee particulars
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/class-fee-particulars/{id}:
    post:
      tags:
        - Admin > Class Fee Particulars
      summary: update class fee particular
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                school_account_head_id:
                  type: integer
                  example: '1'
                class_id:
                  type: integer
                  example: '1'
                amount:
                  type: integer
                  example: '1500'
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/get-class-fee-particular-by-class/1:
    get:
      tags:
        - Admin > Class Fee Particulars
      summary: fetch class fee particular by class id
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: student_id
          in: query
          schema:
            type: integer
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/student-login-logs/{student-id}:
    get:
      tags:
        - Admin > Student Login Logs
      summary: show single student login logs
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: student-id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/notifications:
    post:
      tags:
        - Admin > Notifications
      summary: store notifications
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: "{\r\n  \"title\": \"Exam Reminder\",\r\n  \"message\": \"Your math exam is scheduled for tomorrow.\",\r\n  \"type\": \"individual\",\r\n  \"student_ids\": [1, 2, 3]\r\n},\r\n{\r\n  \"title\": \"Class Cancelled\",\r\n  \"message\": \"Class is cancelled due to maintenance.\",\r\n  \"type\": \"class\",\r\n  \"class_ids\": [1, 4]\r\n},\r\n{\r\n  \"title\": \"Holiday Notice\",\r\n  \"message\": \"All schools will be closed tomorrow.\",\r\n  \"type\": \"general\"\r\n}\r\n\r\n\r\n"
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school_id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Notifications
      summary: show all notifications
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school_id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '7'
        - name: class_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/notifications/{id}:
    post:
      tags:
        - Admin > Notifications
      summary: update notifications
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: "{\r\n  \"title\": \"Exam Reminder\",\r\n  \"message\": \"Your math exam is scheduled for tomorrow.\",\r\n  \"type\": \"individual\",\r\n  \"student_ids\": [1, 2, 3]\r\n},\r\n{\r\n  \"title\": \"Class Cancelled\",\r\n  \"message\": \"Class is cancelled due to maintenance.\",\r\n  \"type\": \"class\",\r\n  \"class_ids\": [1, 4]\r\n},\r\n{\r\n  \"title\": \"Holiday Notice\",\r\n  \"message\": \"All schools will be closed tomorrow.\",\r\n  \"type\": \"general\"\r\n},\r\n'_method':'put'\r\n\r\n\r\n"
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school_id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Notifications
      summary: delete notifications
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school_id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/get-student-notifications/{student_id}:
    get:
      tags:
        - Admin > Notifications
      summary: get student notifications
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: student_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/attendance-reports/class-wise/daily-summary:
    get:
      tags:
        - Admin > Student Attendance > Attendance Report
      summary: daily class wise report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/attendance-reports/section-wise/daily-summary:
    get:
      tags:
        - Admin > Student Attendance > Attendance Report
      summary: section wise attendance daily summary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/attendance-reports/absent-students:
    get:
      tags:
        - Admin > Student Attendance > Attendance Report
      summary: show all daily absent student list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/attendance-reports/leave-students:
    get:
      tags:
        - Admin > Student Attendance > Attendance Report
      summary: show all daily leave student
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/attendance-reports/late-students:
    get:
      tags:
        - Admin > Student Attendance > Attendance Report
      summary: show all daily late students
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/attendance-report/monthly-details:
    get:
      tags:
        - Admin > Student Attendance > Attendance Report
      summary: show all monthly details attendance report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: class_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: section_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: from_date
          in: query
          schema:
            type: string
          example: '2082-01-01'
        - name: to_date
          in: query
          schema:
            type: string
          example: '2082-01-20'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/student-attendance:
    post:
      tags:
        - Admin > Student Attendance
      summary: store student attendance
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                date: '2025-08-20'
                nep_date: '2082-04-28'
                class_id: 1
                section_id: 1
                entries:
                  - student_id: 9
                    status: present
                    remarks: On time
                    time: 08:20 PM
                  - student_id: 10
                    status: late
                    remarks: Traffic delay
                    time: 08:20 PM
                  - student_id: 11
                    status: leave
                    remarks: Sick leave
                    time: 08:20 PM
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school_id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/get-student-attendance-by-class-section:
    get:
      tags:
        - Admin > Student Attendance
      summary: get student by class and section
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school_id
          in: header
          schema:
            type: integer
          example: '1'
        - name: class_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: section_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: nep_date
          in: query
          schema:
            type: string
          example: '2082-01-20'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/get-student-attendance:
    get:
      tags:
        - Admin > Student Attendance
      summary: get individual student attendance
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: student_id
          in: query
          schema:
            type: integer
          example: '4'
        - name: month
          in: query
          schema:
            type: integer
          example: '6'
        - name: year
          in: query
          schema:
            type: integer
          example: '2025'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events:
    post:
      tags:
        - Admin > Event
      summary: store event data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: dfgfdg
                description:
                  type: string
                  example: dfgdg
                date:
                  type: string
                  example: '2023-01-20'
                time:
                  type: string
                  example: 09:20 PM
                event_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Event
      summary: show all event
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/{slug}:
    get:
      tags:
        - Admin > Event
      summary: show single event
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/upcoming-events:
    get:
      tags:
        - Admin > Event
      summary: show upcoming events
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/past-events:
    get:
      tags:
        - Admin > Event
      summary: past events
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/events/{id}:
    delete:
      tags:
        - Admin > Event
      summary: delete event
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/gallery:
    post:
      tags:
        - Admin > Gallery
      summary: store gallery images
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: hy
                images[]:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Gallery
      summary: show all gallery images
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/gallery/{id}:
    get:
      tags:
        - Admin > Gallery
      summary: show single gallery album
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Gallery
      summary: delete gallery images
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/school-messages:
    post:
      tags:
        - Admin > School Message
      summary: store school message
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Harry
                designation:
                  type: string
                  example: Principal
                message:
                  type: string
                  example: hello
                profile_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > School Message
      summary: show all school messages
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/school-messages/{id}:
    post:
      tags:
        - Admin > School Message
      summary: update school messages
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Herry
                designation:
                  type: string
                  example: Teacher
                message:
                  type: string
                  example: Hello
                profile_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > School Message
      summary: delete school message
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/food-menu:
    post:
      tags:
        - Admin > Food Menu
      summary: store food menu data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                food_menu_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Food Menu
      summary: show food menu
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/student-particulars:
    post:
      tags:
        - Admin > Student Particular
      summary: store student particular
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                particulars:
                  - particular_id: 1
                    school_account_head_id: 1
                    student_id: 9
                    scholarship_id: 1
                    discount_amount: 50
                    discount_percent: 0
                    rate: 500
                  - particular_id: 2
                    school_account_head_id: 3
                    student_id: 10
                    scholarship_id: 1
                    discount_amount: 2
                    discount_percent: 5.25
                    rate: 750.5
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Student Particular
      summary: show all student particulars
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: student_id
          in: query
          schema:
            type: integer
          example: '9'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/class-subjects:
    post:
      tags:
        - Admin > Class Subject
      summary: store class subject data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                subject_id:
                  type: integer
                  example: '1'
                class_id:
                  type: integer
                  example: '1'
                credit_hours:
                  type: integer
                  example: '4'
                theory_full_marks:
                  type: integer
                  example: '100'
                theory_pass_marks:
                  type: integer
                  example: '40'
                practical_full_marks:
                  type: integer
                  example: '25'
                practical_pass_marks:
                  type: integer
                  example: '10'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Class Subject
      summary: show all class subject
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: class_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/class-subjects/{id}:
    post:
      tags:
        - Admin > Class Subject
      summary: update class subject
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                subject_id:
                  type: integer
                  example: '1'
                class_id:
                  type: integer
                  example: '1'
                credit_hours:
                  type: integer
                  example: '4'
                theory_full_marks:
                  type: integer
                  example: '100'
                theory_pass_marks:
                  type: integer
                  example: '40'
                practical_full_marks:
                  type: integer
                  example: '25'
                practical_pass_marks:
                  type: integer
                  example: '10'
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/payment-options:
    post:
      tags:
        - Admin > Payment Options
      summary: store payment options
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: eSewa
                secret_key:
                  type: string
                public_key:
                  type: string
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Payment Options
      summary: show all payment options list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/payment-options/{id}:
    post:
      tags:
        - Admin > Payment Options
      summary: update payment option
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: eSewa
                secret_key:
                  type: string
                public_key:
                  type: string
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/unpaid-months:
    get:
      tags:
        - Admin > Student Invoice
      summary: show all unpaid months list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: student_id
          in: query
          schema:
            type: integer
          example: '4'
        - name: year_bs
          in: query
          schema:
            type: integer
          example: '2080'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/invoices:
    post:
      tags:
        - Admin > Student Invoice
      summary: store invoice data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                invoices:
                  - student_id: 9
                    class_id: 1
                    section_id: 1
                    months: Ashar, Shrawan,Bhadra
                    year_bs: '2080'
                    total_amount: 5000
                    due_amount: 5000
                    generated_date_ad: '2023-04-15'
                    generated_date_bs: '2080-01-02'
                    items:
                      - student_particular_id: 1
                        particular_id: 1
                        school_account_head_id: 1
                        amount: 3000
                        months: Baisakh, Jestha,Bhadra
                        year_bs: '2080'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic-session-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/unpaid-invoices:
    get:
      tags:
        - Admin > Student Invoice
      summary: show student invoices
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: student_id
          in: query
          schema:
            type: integer
          example: '9'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/student-payment:
    post:
      tags:
        - Admin > Student Payment
      summary: store student payment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                invoice_id: 3
                student_id: 9
                class_id: 1
                section_id: 1
                payment_method_id: 1
                invoice_no: INV-2023-001
                months: Baisakh, Jestha
                year_bs: '2080'
                total_amount: 5000
                total_discount: 0
                paid_amount: 4500
                due_amount: 500
                remarks: Paid in full
                payment_date_ad: '2023-05-15'
                payment_date_bs: '2080-02-01'
                student_payment_items:
                  - student_particular_id: 1
                    particular_id: 1
                    school_account_head_id: 1
                    invoice_item_id: 1
                    total_amount: 3000
                    discount_amount: 300
                    paid_amount: 2700
                    due_amount: 0
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic-session-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/homeworks:
    post:
      tags:
        - Admin > Home Work
      summary: store homework
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                class_id:
                  type: integer
                  example: '1'
                section_id:
                  type: integer
                  example: '1'
                class_subject_id:
                  type: integer
                  example: '1'
                subject_id:
                  type: integer
                  example: '1'
                np_date:
                  type: string
                  example: '2082-01-20'
                ad_date:
                  type: string
                  example: '2024-07-21'
                homework_title:
                  type: string
                  example: Health and physical education
                homework_description:
                  type: string
                  example: Q/A
                homework_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic-session-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Home Work
      summary: show homework
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: np_date
          in: query
          schema:
            type: string
          example: '2082-01-20'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/homeworks/{id}:
    get:
      tags:
        - Admin > Home Work
      summary: show single homework data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/guardian-feedbacks:
    get:
      tags:
        - Admin > Guardian Feedbacks
      summary: show all guardian feedbacks
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic-session-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/get-student-guardian-feedbacks/{student_id}:
    get:
      tags:
        - Admin > Guardian Feedbacks
      summary: get student guardian feedbacks
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: student_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/employees:
    post:
      tags:
        - Admin > Payroll > Employee
      summary: store employee data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                staff_id: '1'
                account_holder_name: John Doe
                bank_name: Global Bank
                account_number: '1234567890'
                branch_name: Main Branch
                ssf_no: SSF12345
                cit_no: CIT67890
                epf_no: EPF54321
                basic_salary: 50000
                tds: 5000
                employee_allowances:
                  - employee_allowance_type_id: 1
                    amount: 15000
                  - employee_allowance_type_id: 2
                    amount: 5000
                employee_deductions:
                  - employee_deduction_type_id: 1
                    amount: 5000
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Payroll > Employee
      summary: show all employee list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/employees/{employee_id}:
    get:
      tags:
        - Admin > Payroll > Employee
      summary: show single employee data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: employee_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/employees/{id}:
    delete:
      tags:
        - Admin > Payroll > Employee
      summary: delete employee
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/employee-allowance-types:
    post:
      tags:
        - Admin > Payroll > Employee Allowance Type
      summary: store employee type data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Entertainment allowance
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Payroll > Employee Allowance Type
      summary: show all allowance list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/employee-allowance-types/{id}:
    post:
      tags:
        - Admin > Payroll > Employee Allowance Type
      summary: update employee allowance type
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Entertainment allowance
                "_method\n":
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Payroll > Employee Allowance Type
      summary: delete employee allowance type
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/employee-deduction-types:
    post:
      tags:
        - Admin > Payroll > Employee Deduction Type
      summary: store employee deduction type data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Entertainment allowance
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Payroll > Employee Deduction Type
      summary: show all deduction typelist
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/employee-deduction-types/{id}:
    post:
      tags:
        - Admin > Payroll > Employee Deduction Type
      summary: update employee deduction type
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Entertainment allowance
                "_method\n":
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Payroll > Employee Deduction Type
      summary: delete employee deduction type
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/employee-advance-payment:
    post:
      tags:
        - Admin > Payroll > Employee Advance Payment
      summary: store employee advance payment data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                employee_id:
                  type: integer
                  example: '1'
                advance_date_bs:
                  type: string
                  example: '2083-01-29'
                advance_date:
                  type: string
                  example: '2025-08-01'
                advance_amount:
                  type: integer
                  example: '5000'
                remarks:
                  type: string
                  example: hy
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/unsettled-employee-advance-payment:
    get:
      tags:
        - Admin > Payroll > Employee Advance Payment
      summary: show all unsettled employement advance payment
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.12
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Fri, 01 Aug 2025 16:05:21 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "data": [
                        {
                            "id": 3,
                            "school_id": 1,
                            "employee_id": 1,
                            "payroll_id": null,
                            "advance_date_bs": "2083-01-29",
                            "advance_date": "2025-08-01",
                            "advance_amount": "5000.00",
                            "remarks": "hy",
                            "is_settled": "false",
                            "settled_date": null,
                            "created_at": "2025-08-01T16:00:03.000000Z",
                            "updated_at": "2025-08-01T16:00:03.000000Z"
                        },
                        {
                            "id": 2,
                            "school_id": 1,
                            "employee_id": 1,
                            "payroll_id": null,
                            "advance_date_bs": "2083-01-29",
                            "advance_date": "2025-08-01",
                            "advance_amount": "5000.00",
                            "remarks": "hy",
                            "is_settled": "false",
                            "settled_date": null,
                            "created_at": "2025-08-01T16:00:01.000000Z",
                            "updated_at": "2025-08-01T16:00:01.000000Z"
                        }
                    ]
                }
  /api/admin/settled-employee-advance-payment:
    get:
      tags:
        - Admin > Payroll > Employee Advance Payment
      summary: show all settled employment advance payment
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.12
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Fri, 01 Aug 2025 16:04:55 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "data": [
                        {
                            "id": 1,
                            "school_id": 1,
                            "employee_id": 1,
                            "payroll_id": null,
                            "advance_date_bs": "2083-01-29",
                            "advance_date": "2025-08-01",
                            "advance_amount": "5000.00",
                            "remarks": "hy",
                            "is_settled": "true",
                            "settled_date": "2025-08-12",
                            "created_at": "2025-08-01T15:59:31.000000Z",
                            "updated_at": "2025-08-01T15:59:31.000000Z"
                        }
                    ],
                    "links": {
                        "first": "http://127.0.0.1:8000/api/admin/settled-employee-advance-payment?page=1",
                        "last": "http://127.0.0.1:8000/api/admin/settled-employee-advance-payment?page=1",
                        "prev": null,
                        "next": null
                    },
                    "meta": {
                        "current_page": 1,
                        "from": 1,
                        "last_page": 1,
                        "links": [
                            {
                                "url": null,
                                "label": "&laquo; Previous",
                                "active": false
                            },
                            {
                                "url": "http://127.0.0.1:8000/api/admin/settled-employee-advance-payment?page=1",
                                "label": "1",
                                "active": true
                            },
                            {
                                "url": null,
                                "label": "Next &raquo;",
                                "active": false
                            }
                        ],
                        "path": "http://127.0.0.1:8000/api/admin/settled-employee-advance-payment",
                        "per_page": 8,
                        "to": 1,
                        "total": 1
                    }
                }
  /api/admin/employee-payroll:
    post:
      tags:
        - Admin > Payroll > Employee Payroll
      summary: store employee payroll data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                employee_id: 1
                salary_month: '2025-08-01'
                salary_month_bs: '2082-04-17'
                year_bs: '2082'
                month: Baisakh
                basic_salary: 40000
                advance_deduction: 2000
                tds: 1500
                total_allowance: 5000
                total_deduction: 3000
                net_salary: 41500
                employee_payroll_allowances:
                  - employee_allowance_type_id: 1
                    amount: 3000
                  - employee_allowance_type_id: 2
                    amount: 2000
                employee_payroll_deductions:
                  - employee_deduction_type_id: 1
                    amount: 2000
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/pending-employee-payrolls:
    get:
      tags:
        - Admin > Payroll > Employee Payroll
      summary: show all pending payrolls
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/paid-employee-payrolls:
    get:
      tags:
        - Admin > Payroll > Employee Payroll
      summary: show all paid payrolls
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/employee-payment:
    post:
      tags:
        - Admin > Payroll > Employee Payment
      summary: store employement payment data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                employee_payroll_id:
                  type: integer
                  example: '1'
                employee_id:
                  type: integer
                  example: '1'
                payment_option_id:
                  type: integer
                  example: '1'
                paid_amount:
                  type: integer
                  example: '5000'
                payment_date_ad:
                  type: string
                  example: '2025-02-08'
                payment_date_bs:
                  type: string
                  example: '2082-01-20'
                year_bs:
                  type: integer
                  example: '2082'
                month:
                  type: string
                  example: Baisakh
                remarks:
                  type: string
                  example: hy
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Payroll > Employee Payment
      summary: show all employment payment data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-product-category:
    post:
      tags:
        - Admin > Inventory > Category
      summary: store category data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Dress
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Inventory > Category
      summary: show all category list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-product-category/{id}:
    post:
      tags:
        - Admin > Inventory > Category
      summary: update product category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Dress
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Inventory > Category
      summary: delete product category
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-product-unit:
    post:
      tags:
        - Admin > Inventory > Inventory Product Unit
      summary: store unit data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Pieces
                symbol:
                  type: string
                  example: Pcs
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Inventory > Inventory Product Unit
      summary: show all inventory product units
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-product-unit/{id}:
    post:
      tags:
        - Admin > Inventory > Inventory Product Unit
      summary: update inventory product unit data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Pieces
                symbol:
                  type: string
                  example: Pcs
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Inventory > Inventory Product Unit
      summary: delete inventory product unit data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-product-supplier:
    post:
      tags:
        - Admin > Inventory > Inventory Product Suppliers
      summary: store inventory product suppliers
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Huba Store
                email:
                  type: string
                  example: store@gmail.com
                phone_no:
                  type: integer
                  example: '23534534'
                address:
                  type: string
                  example: Kupondole
                pan_vat_number:
                  type: integer
                  example: '234235345'
                website_url:
                  type: string
                  example: store.com
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Inventory > Inventory Product Suppliers
      summary: show all suppliers list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-product-supplier/{id}:
    post:
      tags:
        - Admin > Inventory > Inventory Product Suppliers
      summary: update supplier data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Nishav Store
                email:
                  type: string
                  example: store@gmail.com
                phone_no:
                  type: integer
                  example: '23534534'
                address:
                  type: string
                  example: Kupondole
                pan_vat_number:
                  type: integer
                  example: '234235345'
                website_url:
                  type: string
                  example: store.com
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Inventory > Inventory Product Suppliers
      summary: delete supplier data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Inventory > Inventory Product Suppliers
      summary: show single supplier data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-supplier-transactions/{supplier_id}:
    get:
      tags:
        - Admin > Inventory > Inventory Product Suppliers
      summary: show supplier transaction
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: supplier_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-products:
    post:
      tags:
        - Admin > Inventory > Inventory Products
      summary: store inventory product
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Tie
                inventory_product_category_id:
                  type: integer
                  example: '1'
                inventory_product_unit_id:
                  type: integer
                  example: '1'
                sku:
                  type: integer
                  example: '34543'
                stock_quantity:
                  type: integer
                  example: '400'
                low_stock_threshold:
                  type: integer
                  example: '10'
                description:
                  type: string
                  example: hy
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Inventory > Inventory Products
      summary: show all inventory product list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: category_id
          in: query
          schema:
            type: string
        - name: unit_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-products/{inventory_product_id}:
    post:
      tags:
        - Admin > Inventory > Inventory Products
      summary: update inventory product
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Tie
                inventory_product_category_id:
                  type: integer
                  example: '1'
                inventory_product_unit_id:
                  type: integer
                  example: '1'
                sku:
                  type: integer
                  example: '3454366'
                stock_quantity:
                  type: integer
                  example: '400'
                low_stock_threshold:
                  type: integer
                  example: '10'
                description:
                  type: string
                  example: hy
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '6'
        - name: inventory_product_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Inventory > Inventory Products
      summary: show inventory product
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: inventory_product_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-products/{id}:
    delete:
      tags:
        - Admin > Inventory > Inventory Products
      summary: delete inventory product
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-products/{id}/restore:
    post:
      tags:
        - Admin > Inventory > Inventory Products
      summary: restore inventory product
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-products/{id}/force-delete:
    delete:
      tags:
        - Admin > Inventory > Inventory Products
      summary: inventory product permanent delete
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-product-purchase:
    post:
      tags:
        - Admin > Inventory > Inventory Product Purchase Bill
      summary: store purchase bill data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                supplier_id:
                  type: string
                  example: ' 1'
                bill_date:
                  type: string
                  example: ' 2025-08-08'
                reference:
                  type: string
                  example: ' INV-2025-001'
                note:
                  type: string
                  example: ' hy'
                sub_total:
                  type: string
                  example: ' 950'
                total_discount:
                  type: string
                  example: ' 50'
                non_taxable_total:
                  type: string
                  example: ' 400'
                taxable_total:
                  type: string
                  example: ' 550'
                vat_amount:
                  type: string
                  example: ' 71.5'
                grand_total:
                  type: string
                  example: ' 1021.5'
                status:
                  type: string
                  example: ' approved'
                purchase_bill_image:
                  type: string
                  format: binary
                purchaseProducts[0][inventory_product_id]:
                  type: string
                  example: ' 1'
                purchaseProducts[0][quantity]:
                  type: string
                  example: ' 5'
                purchaseProducts[0][rate]:
                  type: string
                  example: ' 50'
                purchaseProducts[0][vat]:
                  type: string
                  example: ' 5'
                purchaseProducts[0][total_amount]:
                  type: string
                  example: ' 250'
                purchaseProducts[1][inventory_product_id]:
                  type: string
                  example: ' 2'
                purchaseProducts[1][quantity]:
                  type: string
                  example: ' 7'
                purchaseProducts[1][rate]:
                  type: string
                  example: ' 100'
                purchaseProducts[1][vat]:
                  type: string
                  example: ' 13'
                purchaseProducts[1][total_amount]:
                  type: string
                  example: ' 700'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic-session-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Inventory > Inventory Product Purchase Bill
      summary: show inventory product purchase list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic-session-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
          example: approved or void
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-product-purchase/{id}:
    get:
      tags:
        - Admin > Inventory > Inventory Product Purchase Bill
      summary: show inventory product single purchase data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic-session-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-product-purchase/{id}/status:
    post:
      tags:
        - Admin > Inventory > Inventory Product Purchase Bill
      summary: update inventory product purchase bill status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: void
                _method:
                  type: string
                  example: PATCH
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic-session-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-supplier-payment:
    post:
      tags:
        - Admin > Inventory > Inventory Supplier Payment
      summary: store supplier payment data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                supplier_id:
                  type: integer
                  example: '1'
                payment_option_id:
                  type: integer
                  example: '1'
                paid_amount:
                  type: integer
                  example: '100'
                remarks:
                  type: string
                  example: hy
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic-session-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-adjustments:
    post:
      tags:
        - Admin > Inventory > Inventory Adjustment
      summary: store inventory adjustment data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                date: '2025-08-10'
                reason: Year-end stock reconciliation
                description: Adjusting discrepancies found during annual inventory count
                products:
                  - inventory_product_id: 1
                    quantity_on_hand: 50
                    adjusted_quantity: 45
                    adjust_quantity: -5
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic-session-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Inventory > Inventory Adjustment
      summary: show inventory adjustment list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: search_query
          in: query
          schema:
            type: string
          example: hy
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-adjustments/{id}:
    get:
      tags:
        - Admin > Inventory > Inventory Adjustment
      summary: show single inventory data
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/inventory-dashboard/due-paid-summary:
    get:
      tags:
        - Admin > Inventory > Inventory Dashboard
      summary: show inventory due paid summary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic_session_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: supplier_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: date_from
          in: query
          schema:
            type: string
        - name: date_to
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.12
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Sun, 10 Aug 2025 11:06:56 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "filters": {
                        "supplier_id": "1",
                        "academic_session_id": "1",
                        "date_from": null,
                        "date_to": null,
                        "group_by": "month"
                    },
                    "totals": {
                        "purchase_total": 3064.5,
                        "paid_total": 100,
                        "due_total": 2964.5
                    },
                    "by_supplier": [
                        {
                            "supplier_id": 1,
                            "purchase_total": "3064.50",
                            "paid_total": "100.00",
                            "due_total": "2964.50"
                        }
                    ],
                    "series": [
                        {
                            "period": "2025-08",
                            "purchase_total": "3064.50",
                            "paid_total": "100.00",
                            "due_total": "2964.50"
                        }
                    ]
                }
  /api/admin/inventory-dashboard/stock-ledger:
    get:
      tags:
        - Admin > Inventory > Inventory Dashboard
      summary: show stock ledger graph
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic_session_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: date_from
          in: query
          schema:
            type: string
        - name: date_to
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.12
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Sun, 10 Aug 2025 11:06:39 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "filters": {
                        "academic_session_id": "1",
                        "date_from": null,
                        "date_to": null,
                        "fill_gaps": false
                    },
                    "opening_qty": 0,
                    "totals": {
                        "in_qty": 50,
                        "out_qty": 5,
                        "closing": 45
                    },
                    "rows": [
                        {
                            "date": "2025-08-05",
                            "in_qty": 50,
                            "out_qty": 0,
                            "balance": 50
                        },
                        {
                            "date": "2025-08-10",
                            "in_qty": 0,
                            "out_qty": 5,
                            "balance": 45
                        }
                    ]
                }
  /api/admin/inventory-dashboard/low-stocks:
    get:
      tags:
        - Admin > Inventory > Inventory Dashboard
      summary: show low stocks
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: days
          in: query
          schema:
            type: integer
          example: '365'
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.12
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Sun, 10 Aug 2025 11:30:17 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "meta": {
                        "page": 1,
                        "per_page": 25,
                        "total": 1
                    },
                    "data": [
                        {
                            "product_id": 1,
                            "name": "Tie",
                            "sku": "3454366",
                            "on_hand": 390,
                            "avg_daily_use": 0.01,
                            "low_stock_threshold": 400,
                            "reorder_point": 400,
                            "target_level": 400,
                            "gap_vs_rop": -10,
                            "suggest_qty": 10,
                            "status": "low"
                        }
                    ],
                    "params": {
                        "days": 365
                    }
                }
  /api/admin/sms:
    post:
      tags:
        - Admin > Inventory
      summary: New Request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/check-credit:
    get:
      tags:
        - Admin > Inventory
      summary: check credit
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/dashboard/analytics-count:
    get:
      tags:
        - Admin > Dashboard
      summary: show dashboard count data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/dashboard/student-last-12-bs-months-payments:
    get:
      tags:
        - Admin > Dashboard
      summary: last 12 month student payment data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/dashboard/today-student-attendance:
    get:
      tags:
        - Admin > Dashboard
      summary: show today student attendance data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/dashboard/today-student-birthday:
    get:
      tags:
        - Admin > Dashboard
      summary: today student birthday list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/dashboard/event-summary:
    get:
      tags:
        - Admin > Dashboard
      summary: show event summary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/dashboard/student-leave-requests:
    get:
      tags:
        - Admin > Dashboard
      summary: show student leave requests
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic-session-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/roles:
    get:
      tags:
        - Admin > Roles and Permissions
      summary: show all roles
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/teacher-subject:
    post:
      tags:
        - Admin > Teacher Subject
      summary: store teacher subject data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                teacher_id: 12
                assignments:
                  - class_id: 1
                    section_id: 1
                    class_subject_ids:
                      - 1
                  - class_id: 2
                    section_id: 2
                    class_subject_ids:
                      - 2
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic-session-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Teacher Subject
      summary: show all subject teacher
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic-session-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/teacher-subject/{id}:
    delete:
      tags:
        - Admin > Teacher Subject
      summary: delete teacher subjects
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic-session-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/student-admission-report:
    get:
      tags:
        - Admin > Reports > Student Reports
      summary: student admission report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: from_date
          in: query
          schema:
            type: string
          example: '2025-01-20'
        - name: to_date
          in: query
          schema:
            type: string
          example: '2025-09-20'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/student-summary-report:
    get:
      tags:
        - Admin > Reports > Student Reports
      summary: show student summary report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/student-list-report:
    get:
      tags:
        - Admin > Reports > Student Reports
      summary: student list report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: class_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: section_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/student-list-by-gender-report:
    get:
      tags:
        - Admin > Reports > Student Reports
      summary: student report by gender report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/fees-collection-report:
    get:
      tags:
        - Admin > Reports > Finance & Fees Reports
      summary: Fees Collection Report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2082-02-01'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2082-02-01'
        - name: class_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: section_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: months
          in: query
          schema:
            type: string
          example: Jestha
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/reports/due-report:
    get:
      tags:
        - Admin > Reports > Finance & Fees Reports
      summary: show Due Report
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: months
          in: query
          schema:
            type: string
          example: Baisakh
        - name: student_id
          in: query
          schema:
            type: integer
          example: '9'
        - name: class_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: section_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: start_date
          in: query
          schema:
            type: string
          example: '2082-01-02'
        - name: end_date
          in: query
          schema:
            type: string
          example: '2082-01-02'
        - name: academic_session_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: invoice_no
          in: query
          schema:
            type: string
          example: INV-2023-001
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.12
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Mon, 11 Aug 2025 12:27:57 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "data": [
                        {
                            "id": 1,
                            "school_id": 1,
                            "academic_session_id": 1,
                            "student_id": 9,
                            "class_id": 1,
                            "section_id": 1,
                            "invoice_no": "INV-2025-00001",
                            "months": "Ashar, Shrawan,Bhadra",
                            "year_bs": "2080",
                            "total_amount": "5000.00",
                            "total_amount_in_word": "Five Thousand Rupees Only",
                            "generated_date_ad": "2023-04-15",
                            "generated_date_bs": "2082-01-02",
                            "status": "paid",
                            "student_short_detail": {
                                "id": 9,
                                "name": "Hancie  Phago",
                                "student_username": "SHP200305",
                                "email": "hanciephago4@example.com"
                            },
                            "invoice_items": [
                                {
                                    "id": 1,
                                    "invoice_id": 1,
                                    "student_particular_id": 1,
                                    "particular_id": 1,
                                    "school_account_head_id": 1,
                                    "amount": "3000.00",
                                    "months": "Baisakh, Jestha,Bhadra",
                                    "year_bs": "2080",
                                    "status": "paid",
                                    "school_account_head": {
                                        "id": 1,
                                        "account_head_id": 1,
                                        "account_sub_head_id": 1,
                                        "account_sub_sub_head_id": 1,
                                        "name": "Monthly Fees",
                                        "nepali_heading": "Monthly Fees",
                                        "period_name": "OneTime",
                                        "head_type": "Regular"
                                    }
                                }
                            ]
                        }
                    ]
                }
  /api/student/login:
    post:
      tags:
        - Student > Auth
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hanciephago4@example.com
                password:
                  type: integer
                  example: '12345'
                device_name:
                  type: string
                  example: Samsung Galaxy S25
                model_name:
                  type: string
                  example: SM-G998B
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/change-password:
    post:
      tags:
        - Student > Auth
      summary: change admin password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                current_password:
                  type: integer
                  example: '12345'
                password:
                  type: string
                  example: Password@720
                confirm_password:
                  type: string
                  example: Password@720
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/student/{id}:
    get:
      tags:
        - Student > Student
      summary: show student details
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/class-routines:
    get:
      tags:
        - Student > Student Class Routine
      summary: show student class routine
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: class_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: section_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/notifications/individual/{student_id}:
    get:
      tags:
        - Student > Notifications
      summary: show individual notifications
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: student_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/notifications/general:
    get:
      tags:
        - Student > Notifications
      summary: get general notifications
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/notifications/class/{class_id}:
    get:
      tags:
        - Student > Notifications
      summary: get class notifications
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: class_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/student-attendance:
    get:
      tags:
        - Student > Student Attendance
      summary: show student sttendance
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: month
          in: query
          schema:
            type: integer
          example: '6'
        - name: year
          in: query
          schema:
            type: integer
          example: '2025'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/gallery:
    get:
      tags:
        - Student > Gallery
      summary: show all gallery images
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/gallery/{id}:
    get:
      tags:
        - Student > Gallery
      summary: show single gallery album
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/events:
    get:
      tags:
        - Student > Event
      summary: show all event
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/events/{slug}:
    get:
      tags:
        - Student > Event
      summary: show single event
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/upcoming-events:
    get:
      tags:
        - Student > Event
      summary: show upcoming events
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/past-events:
    get:
      tags:
        - Student > Event
      summary: past events
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/food-menu:
    get:
      tags:
        - Student > Food Menu
      summary: show food menu
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/class-mates:
    get:
      tags:
        - Student > Class Mate
      summary: show my class mates
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: class_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: section_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/class-subjects:
    get:
      tags:
        - Student > Class Subjects
      summary: show class subjects
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: class_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/homeworks:
    get:
      tags:
        - Student > Home Work
      summary: show student homeworks
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: class_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: section_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: type
          in: query
          schema:
            type: string
          example: past or today
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/homeworks/{id}:
    get:
      tags:
        - Student > Home Work
      summary: show single homework data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/guardian-feedback:
    post:
      tags:
        - Student > Guardian Feedback
      summary: store guardian feedback
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Event Program
                description:
                  type: string
                  example: hy
                class_id:
                  type: integer
                  example: '1'
                section_id:
                  type: integer
                  example: '1'
                student_id:
                  type: integer
                  example: '4'
                category:
                  type: string
                  example: general
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic-session-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/student-payments/{student_id}:
    get:
      tags:
        - Student > Student Payment
      summary: show student payment history
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: student_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.12
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Sat, 02 Aug 2025 16:04:59 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "data": [
                        {
                            "id": 18,
                            "invoice_id": 9,
                            "student_id": 4,
                            "class_id": 1,
                            "section_id": 1,
                            "payment_method_id": 1,
                            "payment_date_ad": "2023-05-15",
                            "payment_date_bs": "2080-02-01",
                            "invoice_no": "INV-2023-001",
                            "months": "Baisakh, Jestha",
                            "year_bs": "2080",
                            "total_amount": "5000.00",
                            "total_discount": "500.00",
                            "paid_amount": "4500.00",
                            "due_amount": "0.00",
                            "remarks": "Paid in full",
                            "status": "paid",
                            "student_payment_items": [
                                {
                                    "id": 35,
                                    "student_payment_id": 18,
                                    "invoice_item_id": 1,
                                    "particular": "Admission Fee",
                                    "total_amount": "3000.00",
                                    "discount_amount": "300.00",
                                    "paid_amount": "2700.00",
                                    "due_amount": "0.00"
                                },
                                {
                                    "id": 36,
                                    "student_payment_id": 18,
                                    "invoice_item_id": 2,
                                    "particular": "Admission Fee",
                                    "total_amount": "2000.00",
                                    "discount_amount": "200.00",
                                    "paid_amount": "1800.00",
                                    "due_amount": "0.00"
                                }
                            ]
                        },
                        {
                            "id": 17,
                            "invoice_id": 1,
                            "student_id": 4,
                            "class_id": 1,
                            "section_id": 1,
                            "payment_method_id": 1,
                            "payment_date_ad": "2023-05-15",
                            "payment_date_bs": "2080-02-01",
                            "invoice_no": "INV-2023-001",
                            "months": "Baisakh, Jestha",
                            "year_bs": "2080",
                            "total_amount": "5000.00",
                            "total_discount": "500.00",
                            "paid_amount": "4500.00",
                            "due_amount": "0.00",
                            "remarks": "Paid in full",
                            "status": "paid",
                            "student_payment_items": [
                                {
                                    "id": 33,
                                    "student_payment_id": 17,
                                    "invoice_item_id": 1,
                                    "particular": "Admission Fee",
                                    "total_amount": "3000.00",
                                    "discount_amount": "300.00",
                                    "paid_amount": "2700.00",
                                    "due_amount": "0.00"
                                },
                                {
                                    "id": 34,
                                    "student_payment_id": 17,
                                    "invoice_item_id": 2,
                                    "particular": "Admission Fee",
                                    "total_amount": "2000.00",
                                    "discount_amount": "200.00",
                                    "paid_amount": "1800.00",
                                    "due_amount": "0.00"
                                }
                            ]
                        }
                    ]
                }
  /api/student/student-dues/{student_id}:
    get:
      tags:
        - Student > Student Payment
      summary: show student due amount
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: student_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/student-invoice/{student_id}:
    get:
      tags:
        - Student > Student Payment
      summary: show student invoice
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: student_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/student-leave-request:
    post:
      tags:
        - Student > Student Leave Request
      summary: store student leave request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                class_id:
                  type: integer
                  example: '1'
                section_id:
                  type: integer
                  example: '1'
                student_id:
                  type: integer
                  example: '4'
                leave_from:
                  type: string
                  example: '2082-01-20'
                leave_to:
                  type: string
                  example: '2082-01-25'
                reason:
                  type: string
                  example: fever
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic-session-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/student/student-leave-request/4:
    get:
      tags:
        - Student > Student Leave Request
      summary: show student leave request data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic-session-id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/teacher/login:
    post:
      tags:
        - Teacher > Auth
      summary: teacher login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: arun33599@gmail.com
                password:
                  type: integer
                  example: '12345'
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/teacher/teacher-details/{teacher_id}:
    get:
      tags:
        - Teacher > Teacher
      summary: show teacher details
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: teacher_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/teacher/teacher-subjects/{teacher_id}:
    get:
      tags:
        - Teacher > Teacher Subject
      summary: show teacher subjects
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: academic-session-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: teacher_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.12
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Wed, 13 Aug 2025 12:34:38 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "data": [
                        {
                            "id": 17,
                            "created_user_id": 2,
                            "teacher_id": 12,
                            "class_subject_id": 1,
                            "class_id": 1,
                            "section_id": 1,
                            "class": {
                                "id": 1,
                                "name": "Four",
                                "faculty_id": 1,
                                "level_id": 1,
                                "school_id": 1
                            },
                            "section": {
                                "id": 1,
                                "name": "A",
                                "faculty_id": 1,
                                "level_id": 1,
                                "program_id": 1,
                                "school_id": 1
                            },
                            "class_subject": {
                                "id": 1,
                                "subject_id": 1,
                                "class_id": 1,
                                "theory_full_marks": 100,
                                "theory_pass_marks": 40,
                                "practical_full_marks": 25,
                                "practical_pass_marks": 10,
                                "credit_hours": 4,
                                "subject": {
                                    "id": 1,
                                    "school_id": 1,
                                    "subject_code": "NPL 002",
                                    "subject_name": "Compulsory Nepali",
                                    "theory_full_marks": 50,
                                    "theory_pass_marks": 20,
                                    "practical_full_marks": 50,
                                    "practical_pass_marks": 20,
                                    "created_at": "2025-08-13T09:06:55.000000Z",
                                    "updated_at": "2025-08-13T09:06:55.000000Z"
                                }
                            }
                        },
                        {
                            "id": 18,
                            "created_user_id": 2,
                            "teacher_id": 12,
                            "class_subject_id": 2,
                            "class_id": 2,
                            "section_id": 2,
                            "class": {
                                "id": 2,
                                "name": "Three",
                                "faculty_id": 1,
                                "level_id": 1,
                                "school_id": 1
                            },
                            "section": {
                                "id": 2,
                                "name": "B",
                                "faculty_id": 1,
                                "level_id": 1,
                                "program_id": 1,
                                "school_id": 1
                            },
                            "class_subject": {
                                "id": 2,
                                "subject_id": 1,
                                "class_id": 2,
                                "theory_full_marks": 100,
                                "theory_pass_marks": 40,
                                "practical_full_marks": 25,
                                "practical_pass_marks": 10,
                                "credit_hours": 4,
                                "subject": {
                                    "id": 1,
                                    "school_id": 1,
                                    "subject_code": "NPL 002",
                                    "subject_name": "Compulsory Nepali",
                                    "theory_full_marks": 50,
                                    "theory_pass_marks": 20,
                                    "practical_full_marks": 50,
                                    "practical_pass_marks": 20,
                                    "created_at": "2025-08-13T09:06:55.000000Z",
                                    "updated_at": "2025-08-13T09:06:55.000000Z"
                                }
                            }
                        }
                    ]
                }
  /api/teacher/student-attendance:
    post:
      tags:
        - Teacher > Student Attendance
      summary: store student attendance
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                date: '2025-08-20'
                nep_date: '2082-04-28'
                class_id: 1
                section_id: 1
                entries:
                  - student_id: 9
                    status: present
                    remarks: On time
                    time: 08:20 PM
                  - student_id: 10
                    status: late
                    remarks: Traffic delay
                    time: 08:20 PM
                  - student_id: 11
                    status: leave
                    remarks: Sick leave
                    time: 08:20 PM
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: school_id
          in: header
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
